import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import json

import os
from dotenv import load_dotenv

import database

# random_numbers = [70, 343, 317, 103, 268, 336, 439, 125, 472, 317]
# random_numbers = [123, 234, 345, 456]
admin_id = 844429666

db = database.Database()

load_dotenv()
TOKEN = os.getenv("TOKEN")

bot = telebot.TeleBot(TOKEN)


def random_number_handler(message):
    button = InlineKeyboardButton("–ï—â–µ —Ä–∞–∑–æ–∫!", callback_data="game1")
    markup = InlineKeyboardMarkup()
    markup.add(button)
    numbers = get_numbers()
    try:
        user_number = int(message.text)
    except ValueError:
        bot.delete_message(message.chat.id, db.get_last_message(message.chat.id))
        bot.delete_message(message.chat.id, db.get_last_message(message.chat.id) + 1)
        last_message = bot.send_message(message.chat.id,
                                        "–Ø –ø—Ä–æ—Å–∏–ª –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ :(", reply_markup=markup).message_id
        db.set_last_message(message.chat.id, last_message)
    else:
        if user_number in numbers:
            numbers.remove(user_number)
            set_numbers(numbers)
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É
            bot.send_message(admin_id, f"@{message.from_user.username} –æ—Ç–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {user_number}")
            bot.delete_message(message.chat.id, db.get_last_message(message.chat.id))
            bot.delete_message(message.chat.id, db.get_last_message(message.chat.id) + 1)
            mesg = bot.send_message(message.chat.id, "–û–≥–æ, —Ç—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!"
                                                          " –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ –±–µ–π–¥–∂–∞")
            db.set_last_message(message.chat.id, mesg.message_id)
            bot.register_next_step_handler(mesg, victory_handler)

        else:
            bot.delete_message(message.chat.id, db.get_last_message(message.chat.id))
            bot.delete_message(message.chat.id, db.get_last_message(message.chat.id) + 1)
            last_message = bot.send_message(message.chat.id,
                                            "–ù–µ —É–≥–∞–¥–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!", reply_markup=markup).message_id
            db.set_last_message(message.chat.id, last_message)


def victory_handler(message):
    with open('winners.json', 'r+') as f:
        winners = json.load(f)
        winners["@" + str(message.from_user.username)] = message.text
        f.seek(0)
        f.truncate(0)
        json.dump(winners, f, indent=2, ensure_ascii=False)
    start_message_handler(message)

def get_winners():
    with open('winners.json', 'r') as f:
        return json.load(f)

def get_numbers():
    with open('numbers.json', 'r') as f:
        return json.load(f)["numbers"]

def set_numbers(numbers):
    with open('numbers.json', 'w') as f:
        d = dict()
        d["numbers"] = numbers
        f.seek(0)
        f.truncate(0)
        json.dump(d, f, indent=2, ensure_ascii=False)




@bot.message_handler(commands=['start'])
def start_message_handler(message):
    if not db.user_exists(message.chat.id):
        db.add_user(message.chat.id)
        db.set_last_message(message.chat.id, 0)
    if "@" + str(message.from_user.username) in get_winners().keys():
        button = InlineKeyboardButton("–†–µ–π—Ç–∏–Ω–≥ü§©", url="https://vk.com/app51868403")
        markup = InlineKeyboardMarkup()
        markup.row(button)
        last_message = db.get_last_message(message.chat.id)
        if last_message != 0:
            bot.delete_message(message.chat.id, last_message)
        last_message = bot.send_message(message.chat.id,
                                        "–¢—ã –ø–æ–ª—É—á–∏–ª –∞—á–∏–≤–∫—É! –°–∫–æ—Ä–æ –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!",
                                        reply_markup=markup).message_id
        db.set_last_message(message.chat.id, last_message)
    elif len(get_numbers()) == 0:
        last_message = db.get_last_message(message.chat.id)
        if last_message != 0:
            bot.delete_message(message.chat.id, last_message)
        button = InlineKeyboardButton("üò¢", callback_data="üò¢")
        markup = InlineKeyboardMarkup()
        markup.row(button)
        last_message = bot.send_message(message.chat.id,
                                        "–ü—Ä–∏–≤–µ—Ç! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å–µ —á–∏—Å–ª–∞ —É–∂–µ –æ—Ç–≥–∞–¥–∞–ª–∏ :(",
                                        reply_markup=markup).message_id
        db.set_last_message(message.chat.id, last_message)
    else:
        button1 = InlineKeyboardButton("–ö–æ–Ω–µ—á–Ω–æ!", callback_data="game1")
        markup = InlineKeyboardMarkup()
        markup.row(button1)
        last_message = db.get_last_message(message.chat.id)
        if last_message != 0:
            bot.delete_message(message.chat.id, last_message)
        last_message = bot.send_message(message.chat.id,
                                        "–ü—Ä–∏–≤–µ—Ç–æ—Å! –ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –æ—Ç–ª–∏—á–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∞—á–∏–≤–∫—É!"
                                        " –¢—ã –≤ –¥–µ–ª–µ?", reply_markup=markup).message_id
        db.set_last_message(message.chat.id, last_message)


@bot.callback_query_handler(func=lambda callback: True)
def callback_handler(callback):
    if callback.data == 'go':
        start_message_handler(callback.message)
    elif callback.data == 'game1':
        bot.delete_message(callback.message.chat.id, db.get_last_message(callback.message.chat.id))
        if len(get_numbers()) != 0:
            markup = InlineKeyboardMarkup()
            mesg = bot.send_message(
                callback.message.chat.id,
                    f"–Ø –∑–∞–≥–∞–¥–∞–ª 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª (–æ—Ç 1 –¥–æ 500), –ø–æ–ø—Ä–æ–±—É–π –æ—Ç–≥–∞–¥–∞—Ç—å "
                    f"–∏—Ö —Ä–∞–Ω—å—à–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! –ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç\n–û—Å—Ç–∞–ª–æ—Å—å "
                    f"{len(get_numbers())} –∏–∑ 10",
                    reply_markup=markup)
            db.set_last_message(callback.message.chat.id, mesg.message_id)
            bot.register_next_step_handler(mesg, random_number_handler)
        else:
            button = InlineKeyboardButton("üò¢", callback_data="üò¢")
            markup = InlineKeyboardMarkup()
            markup.row(button)
            mesg = bot.send_message(
                callback.message.chat.id,
                f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å–µ —á–∏—Å–ª–∞ –∫–æ–Ω—á–∏–ª–∏—Å—å :(", reply_markup=markup)
            db.set_last_message(callback.message.chat.id, mesg.message_id)

    elif callback.data == 'üò¢':
        bot.answer_callback_query(callback_query_id=callback.id, text='üò¢')


bot.polling(none_stop=True)